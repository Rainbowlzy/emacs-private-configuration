(ns website.db)
(use 'clojure.java.jdbc)
(require '[clojure.string :as string])
(require '[clojure.java.jdbc :as jdbc]
         '[java-jdbc.ddl :as ddl])

(def connection-str "" "Data Source=192.168.0.169,1434;Initial Catalog=TCWirelessResource;User ID=TCWireless_Test;Password=PKL*)(^h74fJ4$;Persist Security Info=True;")

(for [pair (string/split connection-str #";")]
  (reduce #(hash-map (keyword (string/lower-case (string/replace %1 #"\s" "-"))) %2) (string/split pair #"=")))

;; (def db {:classname "sun.jdbc.odbc.JdbcOdbcDriver"
;;          :subprotocol "odbc"
;;          :subname (str
;;                    "Driver={Microsoft Excel Driver (*.xlsx)};DBQ="
;;                    "/Users/apple/Downloads/数据报表_20160329143013209.xlsx"
;;                    "DriverID=22;READONLY=false"
;;                    )}) ;; <- Put the DSN name here

;; (jdbc/query db ["select * from Sheet1"])



;; (def db {:classname "com.microsoft.jdbc.sqlserver.SQLServerDriver"
;;          :subprotocol "sqlserver"
;;          :subname "//192.168.0.169:1434;database=TCWirelessResource;user=TCWireless_Test;password=PKL*)(^h74fJ4$"
;;          })

;; (jdbc/query db-spec ["SELECT [CSId],[CSFirstAreaId],[CSFirstAreaName],[CSSecondAreaId],[CSSecondAreaName],[CSCategoryId],[CSCategoryName],[CSOrderCount],[CSImgUrl],[CSBeginDate],[CSEndDate],[CSSort],[CSIsDel],[CSCreateOn],[CSModBy],[CSModOn] FROM [TCWirelessResource].[dbo].[OverseasCategorySet] with(nolock)"])

;; (jdbc/db-do-commands db-spec false
;;                      (ddl/create-table
;;                       :tags
;;                       [:id :serial "PRIMARY KEY"]
;;                       [:name :varchar "NOT NULL"]))

;; (jdbc/query db-spec (sql/select * :table (sql/where {:name "Clojure"})))




